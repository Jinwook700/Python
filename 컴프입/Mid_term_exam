[001]
영문 알파벳 대문자로 이루어진 두 단어가 다음의 두 가지 조건을 만족하면 같은 구성을 갖는다고 말한다.

두 개의 단어가 같은 종류의 문자로 이루어져 있다.
같은 문자는 같은 개수 만큼 있다.
예를 들어 "DOG"와 "GOD"은 둘 다 'D', 'G', 'O' 세 종류의 문자로 이루어져 있으며 
양쪽 모두 'D', 'G', 'O' 가 하나씩 있으므로 이 둘은 같은 구성을 갖는다. 
하지만 "GOD"과 "GOOD"의 경우 "GOD"에는 'O'가 하나, "GOOD"에는 'O'가 두 개 있으므로
이 둘은 다른 구성을 갖는다.
두 단어가 같은 구성을 갖는 경우, 또는 한 단어에서 한 문자를 더하거나, 
빼거나, 하나의 문자를 다른 문자로 바꾸어 나머지 한 단어와 같은 구성을 갖게 되는 경우에 
이들 두 단어를 서로 비슷한 단어라고 한다.

예를 들어 "DOG"와 "GOD"은 같은 구성을 가지므로 이 둘은 비슷한 단어이다.
또한 "GOD"에서 'O'를 하나 추가하면 "GOOD" 과 같은 구성을 갖게 되므로 이 둘 또한 비슷한 단어이다.
하지만 "DOG"에서 하나의 문자를 더하거나, 빼거나, 바꾸어도 "DOLL"과 같은 구성이 되지는 않으므로 
"DOG"과 "DOLL"은 비슷한 단어가 아니다.

입력으로 여러 개의 서로 다른 단어가 주어질 때, 
첫 번째 단어와 비슷한 단어가 모두 몇 개인지 찾아 출력하는 프로그램을 작성하시오.

Input
첫째 줄에는 단어의 개수가 주어지고 둘째 줄부터는 한 줄에 하나씩 단어가 주어진다. 
모든 단어는 영문 알파벳 대문자로 이루어져 있다. 단어의 개수는 100개 이하이며,
각 단어의 길이는 10 이하이다.

Output
입력으로 주어진 첫 번째 단어와 비슷한 단어가 몇 개인지 첫째 줄에 출력한다.


[002]
왕비를 피해 일곱 난쟁이들과 함께 평화롭게 생활하고 있던 백설공주에게 위기가 찾아왔다.
일과를 마치고 돌아온 난쟁이가 일곱 명이 아닌 아홉 명이었던 것이다.
아홉 명의 난쟁이는 모두 자신이 "백설 공주와 일곱 난쟁이"의 주인공이라고 주장했다.
뛰어난 수학적 직관력을 가지고 있던 백설공주는, 
다행스럽게도 일곱 난쟁이의 키의 합이 100이 됨을 기억해 냈다.
아홉 난쟁이의 키가 주어졌을 때, 백설공주를 도와 일곱 난쟁이를 찾는 프로그램을 작성하시오.

Input
아홉 개의 줄에 걸쳐 난쟁이들의 키가 주어진다. 
주어지는 키는 100을 넘지 않는 자연수이며, 아홉 난쟁이의 키는 모두 다르며,
가능한 정답이 여러 가지인 경우는 없도록 test case를 구성하였다.

Output
일곱 난쟁이의 키를 오름차순으로 출력한다. 일곱 난쟁이를 찾을 수 없는 경우는 없다.

[Code]
A = list()

for i in range(9):
    N = int(input())
    A.append(N)

sum1 = sum(A) - 100
break1 = 0

for j in range(9):
    for k in range(9):
        if (j != k):
            if (A[j]+A[k] == sum1):
                if (j < k):
                    del(A[k])
                    del(A[j])
                else :
                    del(A[j])
                    del(A[k])
                break1 = 1
                break 
    if (break1 == 1):
        break
A.sort()
for q in A:
    print(q)


[003]
7개의 자연수가 주어질 때, 이들 중 홀수인 자연수들을 모두 골라 그 합을 구하고, 
고른 홀수들 중 최솟값을 찾는 프로그램을 작성하시오.
예를 들어, 7개의 자연수 12, 77, 38, 41, 53, 92, 85가 주어지면 
이들 중 홀수는 77, 41, 53, 85이므로 그 합은

77 + 41 + 53 + 85 = 256

이 되고,

41 < 53 < 77 < 85

이므로 홀수들 중 최솟값은 41이 된다.

Input
입력의 첫째 줄부터 일곱 번째 줄까지 한 줄에 하나의 자연수가 주어진다. 
주어지는 자연수는 100보다 작다.

Output
홀수가 존재하지 않는 경우에는 첫째 줄에 -1을 출력한다. 
홀수가 존재하는 경우 첫째 줄에 홀수들의 합을 출력하고, 둘째 줄에 홀수들 중 최솟값을 출력한다.

[Code]
A = list()

for i in range(7):
    N = int(input())
    if (N%2 == 1):
        A.append(N)
if (len(A) == 0):
    print(-1)
else :
    print(sum(A))
    print(min(A))


[004]
김형택은 탑문고의 직원이다. 김형택은 계산대에서 계산을 하는 직원이다. 
김형택은 그날 근무가 끝난 후에, 
오늘 판매한 책의 제목을 보면서 가장 많이 팔린 책의 제목을 칠판에 써놓는 일도 같이 하고 있다.
오늘 하루 동안 팔린 책의 제목이 입력으로 들어왔을 때, 
가장 많이 팔린 책의 제목을 출력하는 프로그램을 작성하시오.

Input
첫째 줄에 오늘 하루 동안 팔린 책의 개수 N이 주어진다.
이 값은 1,000보다 작거나 같은 자연수이다. 둘째부터 N개의 줄에 책의 제목이 입력으로 들어온다.
책의 제목의 길이는 50보다 작거나 같고, 알파벳 소문자로만 이루어져 있다.

Output
첫째 줄에 가장 많이 팔린 책의 제목을 출력한다. 
만약 가장 많이 팔린 책이 여러 개일 경우에는 사전 순으로 가장 앞서는 제목을 출력한다.

[Code]
N = int(input())
A = list()
B = list()

for i in range(N):
    word = input()
    A.append(word)
A.sort()
for j in range(N):
    B.append(A.count(A[j]))
    
for k in range(N):
    if (B[k] == max(B)):
        print(A[k])
        break


[005]
정수 값을 요소로 가지는 리스트 nums와 정수 값 target이 주어졌을 때, 
두 숫자의 합이 target이 되는 인덱스를 출력하는 프로그램을 작성하시오.
각 입력 Input에 대해서 단 하나의 답이 있으며, 같은 요소를 두 번 사용할 수 없다.
인덱스는 오름차순으로 출력한다.

Input
첫째 줄에 -109이상 109이하의 정수값을 요소로가지는 리스트 num이 입력된다.
이때, 리스트의 길이는 2 이상 104 이하이다.
두번째 줄에 정수 target이 입력되며 이 값은-109이상 109이하이다.

Output
두 숫자의 합이 target이 되는 인덱스를 오름차순으로 출력하는 프로그램을 작성하시오

[Code]
nums = list(map(int,input().split()))
target = int(input())

co = 0
for i in range(len(nums)):
    for j in range(len(nums)):
        if (i != j):
            if (nums[i] + nums[j] == target):
                if (i > j):
                    print(j,i)
                else :
                    print(i,j)
                co = 1
                break
    if (co == 1):
        break
